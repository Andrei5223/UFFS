# Comandos
\d
	-mostra as relações existentes no banco atual
\l
	-mostra todos os bancos de dados existentes
\i
	-executa um script
\c <banco> <usuario>
	-navega pelo banco com um certo usuario
\du
	-list all users
select current_user;
	-mostra o usuario atual
create user andrei password '123';
	-cria um novo user com senha
select current_time
	-analogo para hora
show datestyle
	-exibe o estilo de data
set datestyle
	-seta um tipo de data
\pset pager off
	-formatacao da exibição
insert into <table> (<instance>, <instance>) values (<values>, <values>);

# Acessar um banco
psql -U <usuario> -h <servidor> -d <banco>
psql -U dduarte -h localhost -d postgres
psql -U postgres -h localhost //senha: postgres

# Tipos de dados
integer > 4 bytes
real > 4 bytes (6 decimais)
numeric(tamanho, casas decimais) > (6,4) > 99.9999
varchar(n) > n = tamanho maximo
serial > incrementa automaticamente

# DDL controlar objetos do BD
create table
alter table
drop table

# DML controlar dados do BD
insert
select
	select <o que é pedido (corte vertical)> from <da tabela que a contem> where <condições (corte horizontal)> 
delete
update

postgres=# //super usuario
postgres=> //usuario

Evitar usar 'distinct', 'or' ou '*' pois exigem mais do banco

# Select
select t.valor, t.valor*1.2 from tarifa t; //fazer contas
select ... case when valor < 10 then 'blabla' when valor >= then 'bleble' end case //altera o escrito no retorno
select codcli as "Código cliente" from ... //altera o nome da coluna no retorno
Função coalesce: Substitui o NULL por um valor.


Retornar os dados das locações em que os carros ainda nao foram retornados, ou nao foram devolvidos.
Retornar as placa do carro e a data de locacao para os carros que foram locados em setembro de 2020.
	select placa, dtloca from locacao where dtloca between '01-09-2020' and '30-09-2020';
Retornar placa do carro, codigo cliente e a data de devolução para as locacoes cuja a tarifa foram blue ou green.
	select placa, codcli, dtdevo from locacao where tarifa = 'blue' or tarifa = 'green';
	select placa, codcli, dtdevo from locacao where tarifa in ('blue', 'green');
Retorne os dados das locacoes feitas pelo cliente C34 na tarifa red
	 select * from locacao where codcli='C34' and tarifa = 'red';
Retorne todas as tarifas que nao foram usadas em nenhum locacao.
	select *
	from tarifa
	where descr not in
	(select tarifa
	from locacao);
Retornar a descrição e preço das tarifas, além da classe da tarifa:
<50 barata
<80 media
senao cara
	select descr, valor, case when valor < 50 then 'barata'
				  when valor < 80 then 'media'
				  else 'cara'
				  end as classe
	from tarifa;


# É possível aninhar um select no from
select codcli
from (select * from locacao) t;

# Limitar saida do select
select ... where ... limit 10;


NAO FAZER: https://pgexercises.com/questions/basic/
-Combining multiple queries;
-Simple aggregation
-More aggregation

# Exercicios BDlcinema
1. update avaliacao set coment = 'Uau! Took my breath away!!!' where coment = 'Uau! Tooke my breath away!!!';
2. insert into avaliacao (codf, email, nestrelas, coment) values ('30', 'jaws@gmail.com', 5, 'Super fã dos filmes Tubarão');
3. insert into pessoa (codp, nome, dtnasc, paisn) values (177, 'Andrei', '16/06/2003', 'Brasil');
   insert into elenco(codf, codp, codpapel, oscar) values (30, 177, 5, 'N');
4. select filme.titulo, pessoa.nome from filme join pessoa on filme.codd=pessoa.codp;
5. select filme.titulo, pessoa.nome from filme join pessoa on filme.codd=pessoa.codp where pessoa.nome = 'Alfred';
6. select pessoa.nome from pessoa join elenco on pessoa.codp = elenco.codp where elenco.oscar = 'Y';
   select pessoa.nome, filme.titulo from pessoa join elenco on pessoa.codp = elenco.codp join filme on filme.codf = elenco.codf where elenco.oscar = 'Y';
7. select f.titulo, f.anol, f.dur, p.nome from filme f join elenco e on f.codf=e.codf join pessoa p on e.codp=p.codp;
8. select filme.titulo from avaliacao join filme on avaliacao.codf = filme.codf where avaliacao.nestrelas = 5;
9. select f.titulo from filme f join elenco e on f.codf = e.codf join pessoa p on e.codp = p.codp where p.nome like 'Steven';
10. select p.nome, f.titulo from filme f right join elenco e on f.codf = e.codf right join pessoa p on e.codp = p.codp;
11. select p.nome from elenco e right join pessoa p on e.codp = p.codp where e.codf is null;
12. select f.titulo from filme f left join avaliacao a on f.codf = a.codf where a.nestrelas is null;
13. select f.titulo, f.dur from filme f where anol between 1960 and 1969;
14. select p.nome
from pessoa p join elenco e on p.codp = e.codp
where e.codpapel = 5;

