/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package controledenotas.janela;

import controledenotas.NotaFiscal;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.stream.Collectors;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author andre
 */
public class MenuPrincipal extends javax.swing.JFrame {

    private List<NotaFiscal> notas;
    private double pesoTotal;
    private double pesoMedio;
    private double precoTotal;
    private double precoMedio;
    private double valorTotal;
    private double valorTotalMedio;

    public MenuPrincipal() {
        initComponents();
        
        notas = new ArrayList<>();
        pesoMedio = 0;
        pesoTotal = 0;
        precoMedio = 0;
        valorTotal = 0;
        valorTotalMedio = 0;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        edtPesoMedio = new javax.swing.JLabel();
        edtValorMedio = new javax.swing.JLabel();
        edtQtdNotas = new javax.swing.JLabel();
        edtPrecoMedio = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        edtPesoTotal = new javax.swing.JLabel();
        edtValorTotal = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableNotasRegistradas = new javax.swing.JTable();
        btnNovaNota = new javax.swing.JButton();
        btnEditarNota = new javax.swing.JButton();
        btnDeletarNota = new javax.swing.JButton();
        btnLimparFiltro = new javax.swing.JButton();
        btnFiltrar = new javax.swing.JButton();
        btnMaisInfo = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        menuNovaNota = new javax.swing.JMenuItem();
        menuDeletar = new javax.swing.JMenuItem();
        menuSair = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        menuEditarNota = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Menu Principal");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Informações Gerais"));

        jLabel1.setText("Peso médio:");

        jLabel2.setText("Média de todos os valores das notas:");

        jLabel3.setText("Quantia de notas registradas:");

        jLabel4.setText("Preço de venda médio:");

        edtPesoMedio.setText("0");

        edtValorMedio.setText("0");

        edtQtdNotas.setText("0");

        edtPrecoMedio.setText("0");

        jLabel5.setText("Peso total:");

        jLabel6.setText("Soma de todas os valores das notas:");

        edtPesoTotal.setText("0");

        edtValorTotal.setText("0");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(edtPrecoMedio)
                                .addGap(352, 352, 352))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(edtPesoTotal)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel3))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(edtValorTotal)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel2)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(edtValorMedio)
                            .addComponent(edtQtdNotas)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(edtPesoMedio)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel2)
                    .addComponent(edtValorMedio)
                    .addComponent(edtValorTotal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel3)
                    .addComponent(edtQtdNotas)
                    .addComponent(edtPesoTotal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(edtPesoMedio))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(edtPrecoMedio))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Notas registradas"));

        tableNotasRegistradas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Produto", "Emissor", "Comprador", "Peso", "Valor da nota", "Data"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableNotasRegistradas);
        if (tableNotasRegistradas.getColumnModel().getColumnCount() > 0) {
            tableNotasRegistradas.getColumnModel().getColumn(0).setPreferredWidth(10);
        }

        btnNovaNota.setText("Nova nota fiscal");
        btnNovaNota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovaNotaActionPerformed(evt);
            }
        });

        btnEditarNota.setText("Editar");
        btnEditarNota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarNotaActionPerformed(evt);
            }
        });

        btnDeletarNota.setText("Deletar");
        btnDeletarNota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletarNotaActionPerformed(evt);
            }
        });

        btnLimparFiltro.setText("Limpar Filtro");
        btnLimparFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparFiltroActionPerformed(evt);
            }
        });

        btnFiltrar.setText("Filtrar");
        btnFiltrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFiltrarActionPerformed(evt);
            }
        });

        btnMaisInfo.setText("Mais Informações");
        btnMaisInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMaisInfoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnNovaNota)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEditarNota)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDeletarNota)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnFiltrar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLimparFiltro)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 331, Short.MAX_VALUE)
                        .addComponent(btnMaisInfo)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNovaNota)
                    .addComponent(btnEditarNota)
                    .addComponent(btnDeletarNota)
                    .addComponent(btnLimparFiltro)
                    .addComponent(btnFiltrar)
                    .addComponent(btnMaisInfo))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jMenu1.setText("Arquivo");

        jMenu3.setText("Novo");

        menuNovaNota.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menuNovaNota.setText("Nota Fiscal");
        menuNovaNota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuNovaNotaActionPerformed(evt);
            }
        });
        jMenu3.add(menuNovaNota);

        jMenu1.add(jMenu3);

        menuDeletar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_DELETE, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menuDeletar.setText("Deletar");
        menuDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuDeletarActionPerformed(evt);
            }
        });
        jMenu1.add(menuDeletar);

        menuSair.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menuSair.setText("Sair");
        menuSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSairActionPerformed(evt);
            }
        });
        jMenu1.add(menuSair);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Editar");

        menuEditarNota.setText("Nota");
        menuEditarNota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuEditarNotaActionPerformed(evt);
            }
        });
        jMenu2.add(menuEditarNota);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void menuNovaNotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuNovaNotaActionPerformed
        TelaCadastro t = new TelaCadastro(notas, tableNotasRegistradas);
        
        //vai executar código após a janela ser fechada, para atualizar os valores
        t.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                // Código a ser executado após o fechamento da janela TelaEditar
                atualizarDados();
            }
        });
        
        t.setVisible(true);
    }//GEN-LAST:event_menuNovaNotaActionPerformed

    private void btnNovaNotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovaNotaActionPerformed
        TelaCadastro t = new TelaCadastro(notas, tableNotasRegistradas);
        
        //vai executar código após a janela ser fechada, para atualizar os valores
        t.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                // Código a ser executado após o fechamento da janela TelaEditar
                atualizarDados();
            }
        });
        
        t.setVisible(true);
    }//GEN-LAST:event_btnNovaNotaActionPerformed

    private void btnEditarNotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarNotaActionPerformed
        try {
            //cria um modelo para manipular a tabela
            DefaultTableModel dtmNotas = (DefaultTableModel) tableNotasRegistradas.getModel();

            //identifica o index da linha selecionada na tabela
            int index = tableNotasRegistradas.getSelectedRow();

            //identifica o id da nota selecionada
            int id = Integer.parseInt(tableNotasRegistradas.getValueAt(index, 0).toString());


            TelaEditar t = new TelaEditar(notas, tableNotasRegistradas, id);
            
            //vai executar código após a janela ser fechada, para atualizar os valores
            t.addWindowListener(new WindowAdapter() {
                @Override
                public void windowClosed(WindowEvent e) {
                    // Código a ser executado após o fechamento da janela TelaEditar
                    atualizarDados();
                }
            });

            t.setVisible(true);
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Selecione a nota que deseja editar!");
        }
    }//GEN-LAST:event_btnEditarNotaActionPerformed

    private void btnDeletarNotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletarNotaActionPerformed
        try {
            //cria um modelo para manipular a tabela
            DefaultTableModel dtmNotas = (DefaultTableModel) tableNotasRegistradas.getModel();

            //identifica o index da linha selecionada na tabela
            int index = tableNotasRegistradas.getSelectedRow();

            //identifica o id da nota selecionada
            int id = Integer.parseInt(tableNotasRegistradas.getValueAt(index, 0).toString());

            //remove a linha da tabela
            dtmNotas.removeRow(index);

            //remove a nota com o id da lista usando um filtro com expressão lambda
            List<NotaFiscal> notaRemovida = notas.stream().filter(e-> e.getId() == id).collect(Collectors.toList());
            notas.remove(notaRemovida.get(0));

            atualizarDados();
            
            //imprime a lista no log
            System.out.println("LISTA:");
            notas.forEach(e -> System.out.println(e.toString()));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Selecione a nota que deseja deletar!");
        }
    }//GEN-LAST:event_btnDeletarNotaActionPerformed

    private void btnLimparFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparFiltroActionPerformed
        DefaultTableModel dtmNotas = (DefaultTableModel) tableNotasRegistradas.getModel();

        int qtdLinhas = dtmNotas.getRowCount();
        
        //remove todas as linhas
        for (int i = qtdLinhas - 1; i >= 0; i--){
            dtmNotas.removeRow(i);
        }
        
        //adiciona os dados do banco à tabela
        Iterator<NotaFiscal> it = notas.iterator();
        while (it.hasNext()){
            NotaFiscal nota = it.next();
            String dados[] = {String.valueOf(nota.getId()),nota.getProduto().getNome(), nota.getEmissor().getNome(),
                nota.getComprador().getNome(), String.valueOf(nota.getProduto().getPeso()),
                String.valueOf(nota.getValorTotal()), nota.getData().toString()};
            dtmNotas.addRow(dados);
        }
        
        //atualiza as informações
        atualizarDados();
    }//GEN-LAST:event_btnLimparFiltroActionPerformed

    private void btnMaisInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMaisInfoActionPerformed
        try {
            //identifica o index da linha selecionada na tabela
            int index = tableNotasRegistradas.getSelectedRow();

            //identifica o id da nota selecionada
            int id = Integer.parseInt(tableNotasRegistradas.getValueAt(index, 0).toString());

            TelaInfo t = new TelaInfo(notas, id);
            
            t.setVisible(true);
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Selecione a nota que deseja vizualizar!");
        }
    }//GEN-LAST:event_btnMaisInfoActionPerformed

    private void menuSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSairActionPerformed
        this.dispose();
    }//GEN-LAST:event_menuSairActionPerformed

    private void menuDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuDeletarActionPerformed
        try {
            //cria um modelo para manipular a tabela
            DefaultTableModel dtmNotas = (DefaultTableModel) tableNotasRegistradas.getModel();

            //identifica o index da linha selecionada na tabela
            int index = tableNotasRegistradas.getSelectedRow();

            //identifica o id da nota selecionada
            int id = Integer.parseInt(tableNotasRegistradas.getValueAt(index, 0).toString());

            //remove a linha da tabela
            dtmNotas.removeRow(index);

            //remove a nota com o id da lista usando um filtro com expressão lambda
            List<NotaFiscal> notaRemovida = notas.stream().filter(e-> e.getId() == id).collect(Collectors.toList());
            notas.remove(notaRemovida.get(0));

            atualizarDados();
            
            //imprime a lista no log
            System.out.println("LISTA:");
            notas.forEach(e -> System.out.println(e.toString()));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Selecione a nota que deseja deletar!");
        }
    }//GEN-LAST:event_menuDeletarActionPerformed

    private void btnFiltrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFiltrarActionPerformed
        TelaFiltragem t = new TelaFiltragem(notas, tableNotasRegistradas, edtValorTotal, edtValorMedio, edtQtdNotas, edtPrecoMedio, edtPesoTotal, edtPesoMedio);
        
        t.setVisible(true);
    }//GEN-LAST:event_btnFiltrarActionPerformed

    private void menuEditarNotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuEditarNotaActionPerformed
        try {
            //cria um modelo para manipular a tabela
            DefaultTableModel dtmNotas = (DefaultTableModel) tableNotasRegistradas.getModel();

            //identifica o index da linha selecionada na tabela
            int index = tableNotasRegistradas.getSelectedRow();

            //identifica o id da nota selecionada
            int id = Integer.parseInt(tableNotasRegistradas.getValueAt(index, 0).toString());


            TelaEditar t = new TelaEditar(notas, tableNotasRegistradas, id);
            
            //vai executar código após a janela ser fechada, para atualizar os valores
            t.addWindowListener(new WindowAdapter() {
                @Override
                public void windowClosed(WindowEvent e) {
                    // Código a ser executado após o fechamento da janela TelaEditar
                    atualizarDados();
                }
            });

            t.setVisible(true);
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Selecione a nota que deseja editar!");
        }
    }//GEN-LAST:event_menuEditarNotaActionPerformed

    private void atualizarDados(){
        pesoTotal = notas.stream().mapToDouble(nota -> nota.getProduto().getPeso()).sum();
        pesoMedio = pesoTotal / notas.size();

        precoTotal = notas.stream().mapToDouble(nota -> nota.getProduto().getPreco()).sum();
        precoMedio = precoTotal / notas.size();
        
        valorTotal = notas.stream().mapToDouble(nota -> nota.getValorTotal()).sum();
        valorTotalMedio = valorTotal / notas.size();
        
        edtValorTotal.setText(String.valueOf(valorTotal));
        edtValorMedio.setText(String.valueOf(valorTotalMedio));
        edtPrecoMedio.setText(String.valueOf(precoMedio));
        edtQtdNotas.setText(String.valueOf(notas.size()));
        edtPesoMedio.setText(String.valueOf(pesoMedio));
        edtPesoTotal.setText(String.valueOf(pesoTotal));
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDeletarNota;
    private javax.swing.JButton btnEditarNota;
    private javax.swing.JButton btnFiltrar;
    private javax.swing.JButton btnLimparFiltro;
    private javax.swing.JButton btnMaisInfo;
    private javax.swing.JButton btnNovaNota;
    private javax.swing.JLabel edtPesoMedio;
    private javax.swing.JLabel edtPesoTotal;
    private javax.swing.JLabel edtPrecoMedio;
    private javax.swing.JLabel edtQtdNotas;
    private javax.swing.JLabel edtValorMedio;
    private javax.swing.JLabel edtValorTotal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem menuDeletar;
    private javax.swing.JMenuItem menuEditarNota;
    private javax.swing.JMenuItem menuNovaNota;
    private javax.swing.JMenuItem menuSair;
    private javax.swing.JTable tableNotasRegistradas;
    // End of variables declaration//GEN-END:variables
}
